---
name: Modules.Tizen.SortMode
summary: SortMode is a common interface used for sorting of queried data.  
description: Note that the sorting result of list type attributes is not determined. 
extends: Titanium.Proxy

properties:
  - name: attributeName
    summary: The name of the object attribute used for sorting. 
    type: String

  - name: order
    summary: The type of the sorting. 
    description: "By default, this attribute is set to SORT_ORDER_MODE_ASC." 
    type: String
    default: Modules.Tizen.SORT_ORDER_MODE_ASC

examples:
  - title: This example demonstrates work of SortMode
    example: |
        /// Define a success callback
        function successCallback(contacts) {
        // The returned contacts are sorted by first name (ascending)
            console.log(contacts.length + " contacts found.");
        }
        // Define an error callback
        function errorCallback(error) {
            console.log("An error occurred: " + error.message);
        }
        var tizen = require("tizen");
        
        // Create an attribute filter based on first name: "First name should contain 'Chris' (case insensitive)"
        var filter = tizen.createAttributeFilter({attributeName: "name.firstName",
                                                           matchFlag: tizen.FILTER_MUCH_FLAG_CONTAINS,
                                                           matchValue: "Chris"});
        // Sort by first name, ascending
        var sortMode = tizen.createSortMode({attributeName: "name.firstName", order: tizen.SORT_ORDER_MODE_ASC});
        // Send request on contact address book.
        tizen.contact.getDefaultAddressBook().find(successCallback, errorCallback, filter, sortMode);