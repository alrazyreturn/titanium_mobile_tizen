---
name: Titanium.Tizen.SortMode
summary: SortMode is a common interface used for sorting of queried data.  
description: Note that the sorting result of list type attributes is not determined. 
platforms: [tizen]
extends: Titanium.Module

properties:
  - name: attributeName
    summary: The name of the object attribute used for sorting. 
    type: String

  - name: order
    summary: The type of the sorting. 
    description: "By default, this attribute is set to SORT_ORDER_MODE_ASC." 
    type: String
    default: Titanium.Tizen.SORT_ORDER_MODE_ASC

examples:
  - title: This example demonstrates work of SortMode
    example: |
        /// Define a success callback
        function successCallback(contacts) {
        // The returned contacts are sorted by first name (ascending)
            console.log(contacts.length + " contacts found.");
        }
        // Define an error callback
        function errorCallback(error) {
            console.log("An error occurred: " + error.message);
        }
        // Create an attribute filter based on first name: "First name should contain 'Chris' (case insensitive)"
        var filter = Titanium.Tizen.AttributeFilter({"name.firstName", Titanium.Tizen.FILTER_MUCH_FLAG_CONTAINS, "Chris"});
        // Sort by first name, ascending
        var sortMode = Titanium.Tizen.SortMode({"name.firstName", Titanium.Tizen.SORT_ORDER_MODE_ASC});
        // Send request on contact address book.
        tizen.contact.getDefaultAddressBook().find(successCallback, errorCallback, filter, sortMode);