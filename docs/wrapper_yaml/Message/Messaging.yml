---
name: Titanium.Tizen.Message.Messaging
summary: The interface to retrieve messaging services. 
description: Fetches all existing messaging services by type or a messaging service of a given type for concrete account. 
extends: Titanium.Module
platforms: [tizen]
methods:
  - name: getMessageServices
    summary: Retrieves the messaging service of a given type for a given account, or all existing services supporting the given type, if serviceId is not given. 
    description: |
        The errorCallback is launched with these error types:
            InvalidValuesError: If any of the input parameters contain an invalid value, the encoding is not valid or onsuccess is null. Please note that to allow developers to ignore errors, errorCallback accepts null as a valid value.
            UnknownError: In any other error case.
    parameters: 
      - name: messageServiceType
        summary: |
            Type of the services to be retrieved. Can be one of this constants: Titanium.Tizen.Message.MESSAGE_SERVICE_TAG_SMS, 
            Titanium.Tizen.Message.MESSAGE_SERVICE_TAG_MMS, Titanium.Tizen.Message.MESSAGE_SERVICE_TAG_EMAIL
        type: String

      - name: messageServiceType
        summary: Invoked if the services are successfully retrieved. 
        type: Callback<Titanium.Tizen.Message.MessageService>

      - name: errorCallback
        summary: Function called when an error occurs
        type: Callback<Titanium.Tizen.WebAPIError>
        optional: true

examples: 
  - title: This example demonstrates working with messaging
    example: |
         // Define the success callback.
         function serviceListCB(services) {
             if (services.length > 0) {
                 var msg = new tizen.Message("messaging.sms");
             }
         }

         // Define error callback.
         function errorCallback(error) {
          console.log("Cannot get messaging service " + error.message);
         }

         tizen.messaging.getMessageServices("messaging.sms", serviceListCB,
                                             errorCallback);
