---
name: Tizen.Calendar.CalendarItem
summary:  |
    This is a parent interface that is used to create Calendar events and tasks. 
    These attributes are shared by both events and tasks.

extends: Titanium.Proxy
platforms: [tizen]
createable: false

methods:
  - name: convertToString
    summary: |
        Converts the calendar item to a string format that will be generated and returned synchronously. 
        The export format is set using the format parameter.
        
        To use this method, it is required to include the following privilege in the tiapp.xml file of your Titanium application: http://tizen.org/privilege/calendar.read
    returns:
        summary: The representation of the Calendar item.
        type: String
    parameters:
      - name: format
        summary:  The format to use for exporting.
        type: String
    examples:
      - example: |
            var tizen = require("tizen");
        
            // Defines the event search success callback.
            function eventSearchSuccessCallback(events) {
                // Converts the first event to iCalendar 2.0 format (default)
                var vevent = events[0].convertToString(tizen.Calendar.CALENDAR_TEXT_FORMAT_ICALENDAR_20);
                Titanium.API.info('iCalendar 2.0 representation of the event is: ' + vevent);
            }
            // Gets the default calendar
            var myCalendar = tizen.Calendar.getDefaultCalendar(tizen.Calendar.CALENDAR_TYPE_EVENT);
            
            // Finds all events in the first calendar that contain in the summary the string Tizen.
            var filter = tizen.createAttributeFilter({attributeName: 'summary',
                                                               matchFlag: tizen.FILTER_MATCH_FLAG_CONTAINS,
                                                               matchValue: 'Tizen'});
            myCalendar.find(eventSearchSuccessCallback, errorCallback, filter);    
        
  - name: clone
    summary: |
        Clones the CalendarItem object, detached from any calendar.
        
        The CalendarItem object returned by the clone() method will have its identifier set to null and 
        will be detached from any calendar.
        
        To use this method, it is required to include the following privilege in the tiapp.xml file of your Titanium application: http://tizen.org/privilege/calendar.write
    description:       
    parameters:
      - name: item
        summary: The new clone of the CalendarItem object.
        type: Tizen.Calendar.CalendarItem
    examples:
      - example: |    
            // Gets default calendar.
            var tizen = require("tizen");
            var calendar = tizen.Calendar.getDefaultCalendar();
            var html5seminar = tizen.Calendar.createCalendarEvent({startDate: new Date(2012, 3, 4),
                                                        duration: 3600000,
                                                        summary: "HTML5 Seminar"});
                                     
            calendar.add(html5seminar);
            var tizenseminar = html5seminar.clone();
            tizenseminar.summary = "Tizen Seminar";
            calendar.add(tizenseminar);    
 
properties:

  - name: id 
    summary: |
        An attribute to persistently and uniquely identify an item in implementation.
        Includes a UID and a possible recurrence ID that is needed to identify a particular instance of a recurring event.
    type: CalendarItemId
    permission: read-only

  - name: lastModificationDate
    summary: |
        An attribute to identify the last modified date and time of an item.
        This attribute is automatically populated and cannot be edited by the client.
        (See RFC 5545 - Section 3.8.7.3).
    type: Date
    permission: read-only
    optional: true
    
  - name: description 
    summary: |
        An attribute to store the textual descriptions of an item.
        It is usually used to provide a more complete description of the item and any supporting information than what is provided in the summary attribute. (See RFC 5545 - Section 3.8.1.5).
        
        The default value is an empty string.
    type: STRING
    examples:
      - example: |    
            event.description = 'Tizen Codefest';
    
  - name: summary
    summary: |
        An attribute to store a short summary or subject for an item. (See RFC 5545 - Section 3.8.1.12)
        
        The default value is an empty string.
    type: STRING
    examples:
      - example: |    
            event.summary = 'Launching the Tizen reference implementation';

  - name: isAllDay
    summary: |
        An attribute that behaves like a flag to indicate whether an event is an all-day event or not.
        If set to true, then the time and time zone of the startDate are to be ignored and are not guaranteed to be stored in the database. An all-day event always covers the whole day, regardless of which time zone it was defined in and what the current time zone is. The duration must be n*60*24 minutes for an event lasting n days.
        
        The default value for this attribute is false.
    type: Boolean
    examples:
      - example: |    
            event.isAllDay = true; // All-Day event

  - name: startDate 
    summary: |
        An attribute to store the start date/time for an item. (see RFC 5545 - Section 3.8.2.4).
        The default value for this attribute is null.
        
        startDate must be specified in the same time zone as endDate / dueDate if provided.
    type: Date
    examples:
      - example: |    
            // 2010-04-30 09:00
            event.startDate = new Date(2010, 3, 30, 9, 0);

  - name: duration
    summary: |
        An attribute to denote the duration of the calendar component. (See RFC 5545 - Section 3.8.2.5).
        By default, this attribute is set to null.
        
        duration and endDate / dueDate are mutually exclusive, hence, only one of them have null.
        
        Be rounded to second.
    type: Number
    examples:
      - example: |    
            // 1 hour meeting
            event.duration = 3600000;

  - name: location 
    summary: |
        An attribute to store the location or the intended venue for the activity defined by the calendar item. (See RFC 5545 - Section 3.8.1.7)
        
        The default value for this attribute is an empty string.
    type: String
    examples:
      - example: |    
            event.location = 'Huesca';
    
  - name: geolocation
    summary: An attribute to store the global position latitude and longitude of the location where the event is planned to take place. (See RFC 5545 - Section 3.8.1.6).
    type: Tizen.SimpleCoordinates
    examples:
      - example: |    
            event.geolocation = Tizen.createSimpleCoordinates(60.175, 24.934);

  - name: organizer
    summary: |
        An attribute to store the name of the person who organized this event. (See RFC 5545 - Section 3.8.4.3).
        By default, this attribute is initialized to an empty string.
    type: STRING
    examples:
      - example: |    
            event.organizer = 'Mr. Jones';

  - name: visibility
    summary: |
        An attribute to mark the visibility (secrecy) level of the item. (See RFC 5545 - Section 3.8.1.3).
        The value is one of the constants defined for this parameter : CALENDAR_ITEM_VISIBILITY_PUBLIC = 'PUBLIC',
        CALENDAR_ITEM_VISIBILITY_PRIVATE = 'PRIVATE', ...
        The default value is CALENDAR_ITEM_VISIBILITY_PUBLIC.
    type: STRING

  - name: status
    summary: |
        An attribute to store the overall confirmation status for a calendar component. (See RFC 5545 - Section 3.8.1.11).
        For an event, the default value is CALENDAR_ITEM_STATUS_CONFIRMED = 'CONFIRMED'. 
        For a task, the default value is CALENDAR_ITEM_STATUS_NEEDS_ACTION = 'NEEDS_ACTION'.
    type: STRING
    examples:
      - example: |
            var tizen = require("tizen");
            event.status = tizen.Calendar.CALENDAR_ITEM_STATUS_TENTATIVE;

  - name: priority
    summary: |
        An attribute to indicate the priority level of an item and may be used to relatively prioritize multiple items during a given period of time. (See RFC 5545 - Section 3.8.1.9).
        The default value for this attribute is Tizen.Calendar.CALENDAR_ITEM_PRIORITY_LOW priority.
        If the native item database supports another priority schema (such as a range from 1 to 9), the implementation must convert those values to the supported values. 
        For instance, RFC 5545 suggests the following mapping for a range from 1 to 9:
            - 1-4 to Tizen.Calendar.CALENDAR_ITEM_PRIORITY_HIGH,
            - 5 to Tizen.Calendar.CALENDAR_ITEM_PRIORITY_MEDIUM,
            - 6-9 to Tizen.Calendar.CALENDAR_ITEM_PRIORITY_LOW.
    type: STRING
    examples:
      - example: |
            var tizen = require("tizen");
            task.priority = tizen.Calendar.CALENDAR_ITEM_PRIORITY_HIGH;

  - name: alarms
    summary: An attribute array to lists the alarms (or reminders) associated to an item.
    type: Array<Tizen.Calendar.CalendarAlarm>
    examples:
      - example: |
            var tizen = require("tizen");
            ev.startDate = new Date(2011, 2, 11, 8, 0, 0);
            // Gives a sound notification 30 minutes before the item's start time
            var alarm = tizen.Calendar.createCalendarAlarm({before: 3600000,
                                                   method: tizen.Calendar.Calendar.ALARM_METHOD_SOUND});
            ev.alarms = [alarm];

  - name: categories
    summary: |
        An attribute to indicate the item categories or subtypes of a calendar component. 
        The categories are useful in searching for a calendar component of a particular type and category. 
        (See RFC 5545 - Section 3.8.1.2).  
        
        Examples of categories are personal, work, vacation, travel, etc.
        By default, this attribute is set to an empty array.
    type: Array<String>
    examples:
      - example: |    
            event.categories = ['Personal'];

  - name: attendees
    summary: |
        An attribute array that lists the people attending an event. (See RFC 5545 - Section 3.8.4.3).
        By default, this attribute is set to an empty array.
    type: Array<Tizen.Calendar.CalendarAttendee>
    examples:
      - example: |
            var tizen = require("tizen");      
            var attendee = tizen.Calendar.createCalendarAttendee({uri: 'mailto:bob@domain.com',
                                           attendeeInitDict: {role: tizen.Calendar.ATTENDEE_ROLE_CHAIR, RSVP: true}});
            event.attendees = [attendee];

  
