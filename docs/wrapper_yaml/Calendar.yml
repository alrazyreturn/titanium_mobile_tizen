---
name: Tizen.Calendar
summary:  interfaces and methods for users to manage their schedule. 
description: |
    Separate calendars can be implemented for group related events or tasks. For example, a user may have a work, personal, and family calendar. A calendar entry is called an event and is composed of a series of attributes, such as purpose, starting time, and duration. A calendar is a collection of events.
    Internet Calendaring and Scheduling Core Object Specification (iCalendar), defines a format for exchanging event items. Mapping to specified event/task attributes in this API is as per this specification. 
    To know more about this specification, see [RFC 5545](http://tools.ietf.org/html/rfc5545).
    
    This API provides functionality to read, create, delete, and update items in specific calendars. Calendars can be obtained using the getCalendars() method, which returns an array of Calendar objects.
            
    The `Calendar` module is a thin wrapper on the Tizen `Calendar` class.
    
    See also:
  
    *   [Tizen Calendar API](https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fcalendar.html)
    
    *   [Tizen  System Info Guide](https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.appprogramming%2Fhtml%2Fguide%2Fsocial_guide%2Fcalendar.htm)
    

extends: Titanium.Module
platforms: [tizen]
 
methods:
  - name: getCalendars
    summary: Gets an array of Calendar objects.
    description: |
        If the operation completes successfully, the successCallback() must be invoked with all the calendars found and available. 
        The first calendar in the list is always the default calendar.
        
        If no Calendar object is available, the successCallback() is invoked with an empty array.
        
        The errorCallback is launched with these error types:
            InvalidValuesError - if any of the input parameters contain an invalid value.
            UnknownError - if any other error occurs.
        
        To use this method, it is required to include the following privilege in the tiapp.xml file of your Titanium application: http://tizen.org/privilege/calendar.read
    parameters:
      - name: type
        summary:  |
            The type of calendar. CALENDAR_TYPE_EVENT="EVENT" or CALENDAR_TYPE_TASK="TASK"
        type: String
      - name: successCallback
        summary: Function called when the properties have been successfully retrieved.
        type: Callback<Array<Tizen.Calendar.CalendarInstance>>
      - name: errorCallback
        summary: Function called when an error occurred while retrieving the properties.
        type: Callback<Tizen.WebAPIError>        
        optional: true
    examples:
      - example: |    
            var calendar,
                tizen = require("tizen");
            
            function eventFoundCallback(events) {
            
                // The event has been successfully found
                // Changes the summary
                events[0].summary = 'HTML6 Webinar'; 
                calendar.update(events[0]);
                Titanium.API.info('First event was updated!');
            }
            
            // Defines the error callback for all the asynchronous calls
            
            function errorCallback(response) {
            
                Titanium.API.info( 'The following error occurred: ' +  response.name);
            }
            
            // Defines the success callback for retrieving the list of calendars
            
            function calendarListCallback(calendars) {
            
                if(calendars.length > 0) {
                    calendar = calendars[0];
                    Titanium.API.info('The calendar id is ' + calendar.id + ' and name ' + calendar.name);
                    
                    var ev = tizen.Calendar.createCalendarEvent({description:'HTML5 Introduction',
                                                     summary:'HTML5 Webinar', 
                                                     startDate: new Date(2011, 3, 30, 10, 0), 
                                                     duration: 3600000,
                                                     location:'Huesca'});
                    calendar.add(ev);
                    
                    // The event has been successfully added
                    // Checks if the added event can be retrieved from the calendar
                    // If the calendar was empty, only the item added through add() should be returned
                    
                    var filter = tizen.createAttributeFilter({attributeName: 'summary',
                                                                 matchFlag: tizen.FILTER_MATCH_FLAG_CONTAINS,
                                                                 matchValue: 'HTML5'});
                    calendar.find(eventFoundCallback, errorCallback, filter);
                }
            }
            
            // Gets a list of available calendars
            
            tizen.Calendar.getCalendars(tizen.Calendar.CALENDAR_TYPE_EVENT, calendarListCallback, errorCallback);    

  - name: getDefaultCalendar
    summary: Gets the default calendar, which is used for new items.
    description: |
        To use this method, it is required to include the following privilege in the tiapp.xml file of your Titanium application: http://tizen.org/privilege/calendar.read
    returns:
        summary: The default Calendar object.
        type: Tizen.Calendar.CalendarInstance       
    parameters:
      - name: type
        summary:  |
            The type of calendar. Tizen.Calendar.CALENDAR_TYPE_EVENT or Tizen.Calendar.CALENDAR_TYPE_TASK
        type: String
    examples:
      - example: |    
            var myCalendar,
                tizen = require("tizen");
        
            // Defines the error callback for all the asynchronous calls
            function errorCallback(response) {
                Titanium.API.info( 'The following error occurred: ' +  response.name);
            }
            
            function eventFoundCallback(events) {
                // The event has been successfully found
                // Changes the summary
                events[0].summary = 'HTML6 Webinar'; 
                myCalendar.update(events[0]);
                Titanium.API.info('First event was updated!');
            }
            
            // Gets a list of available calendars
            myCalendar = tizen.Calendar.getDefaultCalendar(tizen.Calendar.CALENDAR_TYPE_EVENT);
            
            var ev = tizen.Calendar.createCalendarEvent({description:'HTML5 Introduction', 
                                            summary:'HTML5 Webinar ', 
                                            startDate: new Date(2011, 3, 30, 10, 0), 
                                            duration: 3600000,
                                            location:'Huesca'});
                          
            myCalendar.add(ev);
            
            // The event has been added
            // Checks if the added event can be retrieved from the calendar
            // If the calendar was empty, only the item added through add() should be returned
            var filter = tizen.createAttributeFilter({attributeName: 'summary',
                                                         matchFlag: tizen.FILTER_MATCH_FLAG_CONTAINS,
                                                         matchValue: 'HTML5'});
            myCalendar.find(eventFoundCallback, errorCallback, filter);
          
  - name: getCalendar
    summary: Gets the calendar with the specified identifier and type.
    description: |
        To use this method, it is required to include the following privilege in the tiapp.xml file of your Titanium application: http://tizen.org/privilege/calendar.read
    returns:
        summary: The matching Calendar object.
        type: Tizen.Calendar.CalendarInstance       
    parameters:
      - name: type
        summary:  |
            The type of calendar. Tizen.Calendar.CALENDAR_TYPE_EVENT or Tizen.Calendar.CALENDAR_TYPE_TASK
        type: String
      - name: id
        summary:  The calendar identifier.
        type: String
    examples:
      - example: |    
            var calendarId; // calendarId supposed to be initialized
            
            var tizen = require("tizen");
            
            try {
                var calendar = tizen.Calendar.getCalendar(tizen.Calendar.CALENDAR_TYPE_EVENT, calendarId);
                Titanium.API.info("Successfully retrieved event calendar with id: " + calendarId);
            } catch(err) {
                Titanium.API.info("Error: " + err.name);
            }

  - name: createCalendarTask
    summary: Creates an instance of <Tizen.Calendar.CalendarTask>
    returns:
        type: Tizen.Calendar.CalendarTask       
    parameters:
      - name: taskParameters
        type: [Dictionary<CalendarTaskInit>, Dictionary<RepresentationInit>]
        optional: true
  
  - name: createCalendarEvent
    summary: Creates an instance of <Tizen.Calendar.CalendarEvent>
    returns:
        type: Tizen.Calendar.CalendarEvent       
    parameters:
      - name: eventParameters
        type: [Dictionary<CalendarEventInit>, Dictionary<RepresentationInit>]
        optional: true

    examples:
      - example: |
            var tizen = require("tizen");
            
            // Gets the default calendar
            var calendar = tizen.Calendar.getDefaultCalendar(tizen.Calendar.CALENDAR_TYPE_EVENT);
        
            var ev = tizen.Calendar.createCalendarEvent({description:'HTML5 Introduction', 
                                            summary:'HTML5 Webinar ', 
                                            startDate: new Date(2011, 3, 30, 10, 0), 
                                            duration: 3600000,
                                            location:'Huesca'});                   
            calendar.add(ev);
  
  - name: createCalendarAttendee
    summary: Creates an instance of <Tizen.Calendar.CalendarAttendee>
    returns:
        type: Tizen.Calendar.CalendarAttendee
    parameters:
      - name: attendeeParameters
        type: Dictionary<CalendarAttendeeInit>
                
  - name: createCalendarRecurrenceRule
    summary: Creates an instance of <Tizen.Calendar.CalendarRecurrenceRule>
    returns:
        type: Tizen.Calendar.CalendarRecurrenceRule
    parameters:
      - name: recurrenceRuleParameters
        type: Dictionary<CalendarRecurrenceRuleInit>
                
  - name: createCalendarAlarm
    summary: Creates an instance of <Tizen.Calendar.CalendarAlarm>
    returns:
        type: Tizen.Calendar.CalendarAlarm
    parameters:
      - name: alarmParameters
        type: [Dictionary<CalendarAlarmInitWithDate>, Dictionary<CalendarAlarmInitWithDuration>]
        
properties:

  - name: CALENDAR_TYPE_EVENT 
    summary: EVENT indicates the type of a calendar if a calendar contains events (VEVENT objects)
    type: STRING
    permission: read-only

  - name: CALENDAR_TYPE_TASK
    summary: TASK indicates the type of a calendar if a calendar contains tasks (VTODO objects)
    type: STRING
    permission: read-only

  - name: CALENDAR_TEXT_FORMAT_ICALENDAR_20
    summary: ICALENDAR_20 is type of textual format of a Calendar if the textual format is iCalendar v2.0.
    type: STRING
    permission: read-only

  - name: CALENDAR_TEXT_FORMAT_VCALENDAR_10
    summary: VCALENDAR_10 is type of textual format of a Calendar if the textual format is vCalendar v1.0
    type: STRING
    permission: read-only
    
  - name: ALARM_METHOD_SOUND
    summary: SOUND indicates the type of an alarm if sound is played to alert the user.
    type: STRING
    permission: read-only    
    
  - name: ALARM_METHOD_DISPLAY
    summary: DISPLAY indicates the type of an alarm if display on screen without any sound is used to alert the user
    type: STRING
    permission: read-only    
    
  - name: RECURRENTCE_RULE_FREQUENCY_DAILY
    summary: DAILY indicates the type of frequency for the recurrence of an event if the event occurs daily.
    type: STRING
    permission: read-only    
    
  - name: RECURRENTCE_RULE_FREQUENCY_WEEKLY
    summary: WEEKLY indicates the type of frequency for the recurrence of an event if the event occurs weekly.
    type: STRING
    permission: read-only    
    
  - name: RECURRENTCE_RULE_FREQUENCY_MONTHLY
    summary: MONTHLY indicates the type of frequency for the recurrence of an event if the event occurs monthly.
    type: STRING
    permission: read-only    
    
  - name: RECURRENTCE_RULE_FREQUENCY_YEARLY
    summary: YEARLY indicates the type of frequency for the recurrence of an event if the event occurs yearly.
    type: STRING
    permission: read-only

  - name: BY_DAY_VALUE_MO
    summary: MO  indicates the values for CalendarRecurrenceRule.daysOfWeek.
    type: STRING
    permission: read-only

  - name: BY_DAY_VALUE_TU
    summary: TU indicates the values for CalendarRecurrenceRule.daysOfWeek.
    type: STRING
    permission: read-only

  - name: BY_DAY_VALUE_WE
    summary: WE indicates the values for CalendarRecurrenceRule.daysOfWeek.
    type: STRING
    permission: read-only
    
  - name: BY_DAY_VALUE_TH
    summary: TH indicates the values for CalendarRecurrenceRule.daysOfWeek.
    type: STRING
    permission: read-only    
    
  - name: BY_DAY_VALUE_FR
    summary: FR indicates the values for CalendarRecurrenceRule.daysOfWeek.
    type: STRING
    permission: read-only    
    
  - name: BY_DAY_VALUE_SA
    summary: SA indicates the values for CalendarRecurrenceRule.daysOfWeek.
    type: STRING
    permission: read-only

  - name: BY_DAY_VALUE_SU
    summary: SU indicates the values for CalendarRecurrenceRule.daysOfWeek.
    type: STRING
    permission: read-only    

  - name: EVENT_AVAILABILITY_BUSY
    summary: BUSY indicates the availability of time for an event.
    type: STRING
    permission: read-only    
    
  - name: EVENT_AVAILABILITY_FREE
    summary: FREE indicates the availability of time for an event if the specified time slot is not vacant
    type: STRING
    permission: read-only    

  - name: ATTENDEE_TYPE_INDIVIDUAL
    summary: INDIVIDUAL - Individual
    type: STRING
    permission: read-only

  - name: ATTENDEE_TYPE_GROUP
    summary: GROUP - Group of individuals
    type: STRING
    permission: read-only    
    
  - name: ATTENDEE_TYPE_RESOURCE 
    summary: RESOURCE  - Physical resource
    type: STRING
    permission: read-only    

  - name: ATTENDEE_TYPE_ROOM
    summary: ROOM - Room resource
    type: STRING
    permission: read-only    
    
  - name: ATTENDEE_TYPE_UNKNOWN
    summary: UNKNOWN - Unknown
    permission: read-only    

  - name: ATTENDEE_STATUS_PENDING
    summary: PENDING - if the participant has not yet responded to the event
    type: STRING
    permission: read-only    

  - name: ATTENDEE_STATUS_ACCEPTED
    summary: ACCEPTED - if the participant has accepted the event
    type: STRING
    permission: read-only    
    
  - name: ATTENDEE_STATUS_DECLINED
    summary: DECLINED - if the participant has declined the event
    type: STRING
    permission: read-only    

  - name: ATTENDEE_STATUS_TENTATIVE
    summary: TENTATIVE - if the participant has tentatively accepted the event
    type: STRING
    permission: read-only

  - name: ATTENDEE_STATUS_DELEGATED
    summary: DELEGATED - if the participant has delegated attendance to another participant
    type: STRING
    permission: read-only    
    
  - name: ATTENDEE_STATUS_COMPLETED
    summary: COMPLETED - if the participant's event has been completed
    type: STRING
    permission: read-only    

  - name: ATTENDEE_STATUS_IN_PROCESS
    summary: IN_PROCESS - if the participant's event is currently in process
    type: STRING
    permission: read-only    

  - name: ATTENDEE_ROLE_REQ_PARTICIPANT
    summary: REQ_PARTICIPANT - if the participation of an attendee is mandatory
    type: STRING
    permission: read-only

  - name: ATTENDEE_ROLE_OPT_PARTICIPANT
    summary: OPT_PARTICIPANT - if the participation of an attendee is optional
    type: STRING
    permission: read-only    
    
  - name: ATTENDEE_ROLE_NON_PARTICIPANT
    summary: NON_PARTICIPANT - if the attendee is not a participant but is copied for information purposes
    type: STRING
    permission: read-only    

  - name: ATTENDEE_ROLE_CHAIR
    summary: CHAIR - if the attendee is the chairperson of the event.
    type: STRING
    permission: read-only

  - name: CALENDAR_ITEM_PRIOTITY_HIGH
    summary: HIGH - if item priority is high
    type: STRING
    permission: read-only

  - name: CALENDAR_ITEM_PRIOTITY_MEDIUM
    summary: MEDIUM - if item priority is medium
    type: STRING
    permission: read-only    
    
  - name: CALENDAR_ITEM_PRIOTITY_LOW
    summary: LOW - if item priority is low
    type: STRING
    permission: read-only
    
  - name: CALENDAR_ITEM_VISIBILITY_PUBLIC
    summary: PUBLIC - if item visibility is public
    type: STRING
    permission: read-only

  - name: CALENDAR_ITEM_VISIBILITY_PRIVATE
    summary: PRIVATE - if item visiblity is private
    type: STRING
    permission: read-only    
    
  - name: CALENDAR_ITEM_VISIBILITY_CONFIDENTIAL
    summary: CONFIDENTIAL - if item visibility is confidential
    type: STRING
    permission: read-only

  - name: CALENDAR_ITEM_STATUS_TENTATIVE
    summary: TENTATIVE - if the event is tentative.
    type: STRING
    permission: read-only

  - name: CALENDAR_ITEM_STATUS_CONFIRMED
    summary: CONFIRMED - if the event is confirmed.
    type: STRING
    permission: read-only    
    
  - name: CALENDAR_ITEM_STATUS_CANCELLED
    summary: CANCELLED - if the event/task is cancelled.
    type: STRING
    permission: read-only
    
  - name: CALENDAR_ITEM_STATUS_NEEDS_ACTION
    summary: NEEDS_ACTION - if the task needs action.
    type: STRING
    permission: read-only

  - name: CALENDAR_ITEM_STATUS_IN_PROCESS
    summary: IN_PROCESS - if the task has been completed.
    type: STRING
    permission: read-only    
    
  - name: CALENDAR_ITEM_STATUS_COMPLETED
    summary: COMPLETED - if the task has been cancelled.
    type: STRING
    permission: read-only
    

# Pseudo-types used in creators
---
name: CalendarItemInit
summary: |
    A dictionary that is used for creating calendar items.
    
    These attributes are shared by both calendar events and tasks.
    
    See CalendarItem interface for more information about the members.
platforms: [tizen]
properties:
    
  - name: description 
    summary: An attribute to store the textual descriptions of an item.
    type: STRING
    
  - name: summary
    summary: An attribute to store a short summary or subject for an item.
    type: STRING
    
  - name: isAllDay
    summary: An attribute that behaves like a flag to indicate whether an event is an all-day event or not.
    type: Boolean
    
  - name: startDate 
    summary: An attribute to store the start date/time for an item.e / dueDate if provided.
    type: Date
    
  - name: duration
    summary: An attribute to denote the duration of the calendar component (milliseconds).
    type: Number
    
  - name: location 
    summary: An attribute to store the location or the intended venue for the activity defined by the calendar item.
    type: String

  - name: geolocation
    summary: An attribute to store the global position latitude and longitude of the location where the event is planned to take place.
    type: Tizen.SimpleCoordinates

  - name: organizer
    summary: An attribute to store the name of the person who organized this event.
    type: STRING
    
  - name: visibility
    summary: |
        An attribute to mark the visibility (secrecy) level of the item.
        The value is one of the constants defined for this parameter : 
            CALENDAR_ITEM_VISIBILITY_PUBLIC = 'PUBLIC',
            CALENDAR_ITEM_VISIBILITY_PRIVATE = 'PRIVATE', ...
    type: STRING

  - name: status
    summary: |
        An attribute to store the overall confirmation status for a calendar component.
        For an event, the default value is CALENDAR_ITEM_STATUS_CONFIRMED = 'CONFIRMED'. 
        For a task, the default value is CALENDAR_ITEM_STATUS_NEEDS_ACTION = 'NEEDS_ACTION'.
    type: STRING
    
  - name: priority
    summary: |
        An attribute to indicate the priority level of an item and may be used to relatively prioritize multiple items during a given period of time. (See RFC 5545 - Section 3.8.1.9).
        The default value for this attribute is CALENDAR_ITEM_PRIORITY_LOW priority.
        If the native item database supports another priority schema (such as a range from 1 to 9), the implementation must convert those values to the supported values. 
        For instance, RFC 5545 suggests the following mapping for a range from 1 to 9:
            - 1-4 to CALENDAR_ITEM_PRIORITY_HIGH,
            - 5 to CALENDAR_ITEM_PRIORITY_MEDIUM,
            - 6-9 to CALENDAR_ITEM_PRIORITY_LOW.
    type: STRING
    
  - name: alarms
    summary: An attribute array to lists the alarms (or reminders) associated to an item.
    type: Array<Tizen.Calendar.CalendarAlarm>
    examples:
      - example: |
            ev.startDate = new Date(2011, 2, 11, 8, 0, 0);
            // Gives a sound notification 30 minutes before the item's start time
            var alarm = Tizen.createCalendarAlarm({before: 3600000,
                                                   method: Tizen.Calendar.ALARM_METHOD_SOUND});
            ev.alarms = [alarm];

  - name: categories
    summary: |
        An attribute to indicate the item categories or subtypes of a calendar component. 
        The categories are useful in searching for a calendar component of a particular type and category. 
        (See RFC 5545 - Section 3.8.1.2).  
        
        Examples of categories are personal, work, vacation, travel, etc.
        By default, this attribute is set to an empty array.
    type: Array<String>
    
  - name: attendees
    summary: An attribute array that lists the people attending an event.
    type: Array<Tizen.Calendar.CalendarAttendee>

---
name: CalendarTaskInit
summary: |
    A dictionary that is used for creating calendar tasks.
    
    All the attributes are optional and are undefined by default.
    
    It also provides an interface for specifying task attributes upon task creation
    
    See CalendarTask interface for more information about the members.
extends: CalendarItemInit
platforms: [tizen]
properties:
  - name: dueDate 
    type: Date
    summary: An attribute to store the due date and time for completing a task.
    
  - name: completedDate
    type: Date
    summary: An attribute to record the date and time when an task is completed.
        
  - name: progress
    type: Number
    summary: An attribute to denote the percent of completion of a task.

---
name: CalendarEventInit
summary: |
    A dictionary that is used for creating calendar events.
    
    Provides an interface for specifying event attributes upon event creation
    
    All the attributes are optional and are undefined by default.
    
    See CalendarEvent interface for more information about the members.
    
extends: CalendarItemInit
platforms: [tizen]
properties:
   
  - name: endDate 
    type: Date
    summary: An attribute to store the end date/time of an event.
        
  - name: availability
    type: String
    summary: |
        An attribute to indicate the availability of a person for an event. (See RFC 5545 - Section 3.2.9).
        The value is one of the constants defined for this parameter : EVENT_AVAILABILITY_BUSY = 'BUSY' or EVENT_AVAILABILITY_FREE = 'FREE'
                
  - name: recurrenceRule 
    type: Date
    summary: An attribute to denote the recurrence rule for the event.

---
name: RepresentationInit
summary: A dictionary that is used for creating both calendar tasks and events.
platforms: [tizen]
properties:
        
  - name: stringRepresentation
    type: String
    summary: Data in string format 'iCalendar 1.0' or 'iCalendar 2.0'
  - name: format
    type: String
    summary: |
        Indicates the type of textual format of a Calendar.
        
        The value is one of the constants defined for this parameter :
            CALENDAR_TEXT_FORMAT_ICALENDAR_20 = "ICALENDAR_20",
            CALENDAR_TEXT_FORMAT_VCALENDAR_10 = "VCALENDAR_10".
            
---
name: CalendarAttendeeInit
summary: |
    The properties of a CalendarAttendee, to pass to its creator.
    
    See CalendarAttendee interface for more information about the members.
platforms: [tizen]
properties:

  - name: uri 
    summary: An attribute to store the URI for the attendee.
    type: STRING

  - name: attendeeInitDict
    summary: (optional) The properties of a CalendarAttendee, to pass to its constructor.
    type: Dictionary<AttendeeInitDict>
    optional: true

---
name: AttendeeInitDict
summary: The properties of a CalendarAttendee, to pass to its constructor.
platforms: [tizen]
properties: 

  - name: name
    summary: An attribute to store the name of an attendee.
    type: STRING

  - name: role 
    summary: |
        An attribute to denote the role of the attendee.
        
        The value is one of the constants defined for this type:
            - ATTENDEE_ROLE_REQ_PARTICIPANT = 'REQ_PARTICIPANT'
            - ATTENDEE_ROLE_OPT_PARTICIPANT = 'OPT_PARTICIPANT'
            - ATTENDEE_ROLE_NON_PARTICIPANT = 'NON_PARTICIPANT'
        
    type: STRING

  - name: status
    summary: |
        An attribute to store the participant's attendance status.
        
        The value is one of the constants defined for this type:
            - ATTENDEE_STATUS_PENDING = 'PENDING'
            - ATTENDEE_STATUS_ACCEPTED = 'ACCEPTED'
            - ATTENDEE_STATUS_DECLINED = 'DECLINED'
            - ATTENDEE_STATUS_TENTATIVE = 'TENTATIVE'
            - ATTENDEE_STATUS_DELEGATED = 'DELEGATED'
            - ATTENDEE_STATUS_COMPLETED = 'COMPLETED'
            - ATTENDEE_STATUS_IN_PROCESS = 'PROCESS'
            
    type: STRING

  - name: RSVP 
    summary: An attribute to store the attendee's participation status reply (RSVP).
    type: Boolean

  - name: type
    summary: |
        An attribute to indicate the type of a participant.
        
        The value is one of the constants defined for this type: 
            - ATTENDEE_TYPE_INDIVIDUAL = 'INDIVIDUAL'
            - ATTENDEE_TYPE_GROUP = 'GROUP'
            - ATTENDEE_TYPE_RESOURCE = 'RESOURCE' 
            - ATTENDEE_TYPE_ROOM = 'ROOM'
            - ATTENDEE_TYPE_UNKNOWN = 'UNKNOWN'
    type: STRING

  - name: group 
    summary: (optional) An attribute to store the participant's group or list membership.
    type: STRING
    optional: true

  - name: delegatorURI 
    summary: An attribute to store the URI of the person who has delegated their participation to this attendee.
    type: STRING

  - name: delegateURI 
    summary: An attribute to stores the URI of the attendee to whom the person has delegated his participation.
    type: STRING

  - name: contactRef 
    summary: |
        An attribute to store the participant's reference in the Contact API.
        If the contact is not resolved, this attribute will be set to null. 
    type: Tizen.Contacts.ContactsRef
---
name: CalendarRecurrenceRuleInit
summary: |
    The properties of a CalendarRecurrenceRule to pass to its creator.
    
    For more information about the members, see CalendarRecurrenceRule interface.
platforms: [tizen]
properties: 
  - name: frequency
    summary: |
         An attribute to store the frequency of a recurrence rule.
         This property corresponds to FREQ in RFC 5545.
    description: |
        Can be set to one of the following constants:
          - RECURRENTCE_RULE_FREQUENCY_DAILY
          - RECURRENTCE_RULE_FREQUENCY_WEEKLY
          - RECURRENTCE_RULE_FREQUENCY_MONTHLY
          - RECURRENTCE_RULE_FREQUENCY_YEARLY
    type: String

  - name: ruleInitDict
    summary: The properties of a CalendarRecurrenceRule to pass to its constructor. 
    type: Dictionary<CalendarRecurrenceRuleInitDict>

---
name: CalendarRecurrenceRuleInitDict
summary: The properties of a CalendarRecurrenceRule to pass to its constructor. 
platforms: [tizen]
properties:
 
  - name: interval
    type: Number
    summary: An attribute to specify how often the recurrence rule repeats over the unit of time indicated by its frequency.
        
  - name: untilDate
    type: Date
    summary: An attribute to indicate the end date of a recurrence duration of an event using either an end date (untilDate attribute) or a number of occurrences (occurrenceCount attribute).
        
  - name: occurrenceCount
    type: Number
    summary: An attribute to indicate the number of occurrences of a recurring event.
        
  - name: daysOfTheWeek
    type: Array<String>
    summary: |
        An attribute to store the days of the week associated with the recurrence rule.
        This property value is valid only for recurrence rules with a frequency type of Tizen.Calendar.RECURRENCE_RULE_FREQUENCY_WEEKLY, Tizen.Calendar.RECURRENCE_RULE_FREQUENCY_MONTHLY, and Tizen.Calendar.RECURRENCE_RULE_FREQUENCY_YEARLY.
        This property corresponds to BYDAY in RFC 5545.
                
  - name: setPositions
    type: Array<Number>
    summary: |
        An attribute to store a list of ordinal numbers that filters which recurrences to include in the recurrence rule's frequency.
        For example, a yearly recurrence rule that has a daysOfTheWeek value that specifies Monday through Friday, and a setPositions array containing 2 and -1, occurs only on the second weekday and last weekday of every year.
        Values can be from 1 to 366 or -366 to -1. Negative values indicate counting backwards from the end of the recurrence rule's frequency (week, month, or year).
        This attribute must only be used in conjunction with another BYxxx rule part (such as daysOfTheWeek).
        This property corresponds to BYSETPOS in RFC 5545.
        
        By default, this attribute is set to an empty array
        
  - name: exceptions
    type: Array<Date>
    summary: An attribute to list date/time exceptions for the recurring event.
---
name: CalendarAlarmInitWithDate
summary: 
platforms: [tizen]
properties:

  - name: absoluteDate 
    type: Date
    summary: An attribute to record the absolute date and time when an alarm should be triggered.
             
  - name: method 
    type: String
    summary: |
        An attribute to denote the notification method used by an alarm.
        
        The value is one of the constants defined for this type:
            - ALARM_METHOD_SOUND = 'SOUND'
            - ALARM_METHOD_DISPLAY = 'DISPLAY'
    
  - name: description
    type: String
    summary: (optional) An attribute to store the description of an alarm.
    optional: true

---
name: CalendarAlarmInitWithDuration
summary: 
platforms: [tizen]
properties:
   
  - name: before 
    type: Number
    summary: An attribute to store the duration before an event starts on which the alarm should be triggered (milliseconds).
        
  - name: method 
    type: String
    summary: |
        An attribute to denote the notification method used by an alarm.
        
        The value is one of the constants defined for this type:
            - ALARM_METHOD_SOUND = 'SOUND'
            - ALARM_METHOD_DISPLAY = 'DISPLAY'
    
  - name: description
    type: String
    summary: (optional) An attribute to store the description of an alarm.
    optional: true
