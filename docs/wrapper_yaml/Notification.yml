---
name: Titanium.Tizen.Notification
summary: Module for managing notifications created based on application events.
description: |
    This module provides a way to notify user events that occur in applications to users.
    which are represented by the <Titanium.Tizen.Notification> object.
    
    The `Notification` module is a thin wrapper on the Tizen `NotificationManager`
    class.
    
    See also:
    
    *   [Tizen Notification API](https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fnotification.html)
    
    *   [Tizen  Notification Guide](https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fnotification.html)
    
extends: Titanium.Module
platforms: [tizen]
since: "3.0.2"

methods:
  - name: post
    summary: Post the notification to display.
    parameters:
      - name: notification
        summary: A notification to post.
        type: Titanium.Tizen.Notification
    examples:
      - example: |
          try {
                var appControl = Ti.Tizen.Application.createApplicationControl({
                                     operation: "http://tizen.org/appcontrol/operation/create_content",
                                     uri: null,
                                     mime: "image/jpg",
                                     category: null
                                 });

                var notificationDict = {
                            content : "This is a simple notificaiton.",
                            iconPath : "images/image1.jpg",
                            soundPath : "music/Over the horizon.mp3",
                            vibration : true,
                            appControl : appControl
                        };

                var notification = Ti.Tizen.Notification.createStatusNotification({
                                        statusType: "SIMPLE",
                                        title: "Simple notification",
                                        notificationInitDict: notificationDict
                                   });

                Ti.Tizen.Notification.post(notification);
           } catch (err) {
                Ti.API.info(err.name + ": " + err.message);
           }

  - name: update
    summary: Updates a previously posted notification.
    parameters:
      - name: notification
        summary: A notification to update.
        type: Titanium.Tizen.Notification
    examples:
      - example: |
          try {
                // use a varible for the previoulsy posted notification.
                notification.content = "My notification";
                Ti.Tizen.Notification.update(notification);
           } catch (err) {
                Ti.API.info (err.name + ": " + err.message);
           }
        
  - name: remove
    summary: Removes a previously posted notification.
    parameters:
      - name: id
        summary: A previously posted notification ID.
        type: String
    examples:
      - example: |
          try {
                // use a varible for the previoulsy posted notification.
                Ti.Tizen.Notification.remove(notification.id);;
           } catch (err) {
                Ti.API.info (err.name + ": " + err.message);
           }
        
  - name: removeAll
    summary: Removes all previously posted notifications by the current application.
    examples:
      - example: |
          try {
                Ti.Tizen.Notification.removeAll();
           } catch (err) {
                Ti.API.info (err.name + ": " + err.message);
           }
    
  - name: get
    summary: Gets a previously posted notification by the current application.
    returns:
        type: Titanium.Tizen.Notification
    parameters:
      - name: id
        summary: A previously posted notification ID.
        type: String
    examples:
      - example: |
          try {
                // use a varible for the previoulsy posted notification.
                // keeps notification id to use later.
                var myId = notification.id;

                var myNotification = Ti.Tizen.Notification.get(myId);
           } catch (err) {
                Ti.API.info (err.name + ": " + err.message);
           }
    
  - name: getAll
    summary: Gets all previously posted notifications by the current application.
    returns:
        type: Titanium.Tizen.Notification.Notification[]
    examples:
      - example: |
          try {
               var notifications = Ti.Tizen.Notification.getAll();
               var index = 0;
               
               for ( index = 0; notifications.length > index; index++ )
               {
                   Ti.API.info(notifications[index].id);
                   Ti.API.info(notifications[index].title);
                   Ti.API.info(notifications[index].statusType);
                   Ti.API.info(notifications[index].type);
                   Ti.API.info(notifications[index].content);
                   Ti.API.info(notifications[index].postedTime);
                   Ti.API.info(notifications[index].iconPath);
                   Ti.API.info(notifications[index].soundPath);
                   Ti.API.info(notifications[index].vibration);
                   Ti.API.info(notifications[index].appControl);
               } 
           } catch (err) {
               Ti.API.info (err.name + ": " + err.message);
           }

  - name: createStatusNotification
    summary: The interface which represents status notification.
    returns:
        type: Ti.Tizen.SystemSettings.StatusNotification
    parameters:
      - name: Options
        summary: The dictionary represents information regarding a notification what need to create.
        type: Dictionary<StatusNotificationUnit>
    
properties:

  - name: NOTIFICATION_TYPE_STATUS
    summary: A notification type.
        
    description: |
        STATUS - The posted status notification is displayed in the notification tray. 
        The status notification consists of icon, title, content and time. 
        The status notification can have the application control to launch the specific application when selected by the user.
    type: String
    permission: read-only

  - name: STATUS_NOTIFICATION_TYPE_SIMPLE
    summary: A status notification type.
        
    description: |
        STATUS - The posted status notification is displayed in the notification tray. 
        The status notification consists of icon, title, content and time. 
        The status notification can have the application control to launch the specific application when selected by the user.
    type: String
    permission: read-only

  - name: STATUS_NOTIFICATION_TYPE_ONGOING
    summary: A status notification type.
        
    description: |
        ONGOING - If the application needs to keep the user informed about the notification, consider using ongoing status notification. 
        Please note that the ongoing status notification should be removed by the application that posted the notification.
    type: String
    permission: read-only

  - name: STATUS_NOTIFICATION_TYPE_PROGRESS
    summary: A status notification type.
        
    description: |
        PROGRESS - The progress status notification can display the information for the progress of a job. 
        Please note that the progress status notification should be removed by the application that posted the notification.
    type: String
    permission: read-only

# Pseudo-type
---
name: StatusNotificationInit
summary: An object containing the various options for fetching the properties requested.
platforms: [tizen]
properties:
  - name: content
    type: String
    summary: .

  - name: iconPath
    type: String
    summary: .

  - name: soundPath
    type: String
    summary: .

  - name: vibration
    type: Boolean
    summary: .

  - name: appControl
    type: Ti.Tizen.Aplication.ApplicationControl
    summary: This interface consists of an operation, URI, MIME type, and data.

  - name: appId
    type: String
    summary: The unique ID for an installed application.

  - name: progressValue
    type: Number
    summary: Notification progress.

---
name: StatusNotificationUnit
summary: An object containing the various options for fetching the properties requested.
platforms: [tizen]
properties:
  - name: StatusNotificationType
    type: String
    summary: Notification property value: "SIMPLE", "ONGOING", "PROGRESS".

  - name: title
    type: String
    summary: Name of notification.

  - name: notificationInitDict
    type: StatusNotificationInit
    summary: Dictionary.
