name: Tizen.NFC.NFCPeer
summary: |
  Accesses to the NFC peer-to-peer target.
extends: Titanium.Proxy
platforms: [tizen]

properties:

  - name: isConnected
    type: Boolean
    summary: |
        The value is necessary to check if this NFC peer-to-peer target is connected.
    permission: read-only

methods:
  - name: setReceiveNDEFListener
    summary: Registers a callback function to be invoked when an NDEF message is received from the connected NFC peer-to-peer target.
    description: |
        To use this method, it is required to include the following privilege in the tiapp.xml file of your Titanium application:  http://tizen.org/privilege/nfc.common
    parameters:
      - name: successCallback 
        summary: Invoked in case of successful receiving the message.
        type: Callback<NDEFMessageReadResponse>
    examples:
      - example: |
            Example 1:
            
                var tizen = require("tizen");
                var adapter = tizen.NFC.getDefaultAdapter();

                // Receives NFCPeer
                
                var onSuccessCB = {

                    onattach : function(nfcPeer) {
                    
                        console.log("NFC Target is detected");
                        nfcPeer.setReceiveNDEFListener(function(response) {
                            console.log("Receive message");
                        });
                    },
                    ondetach : function() {
                        console.log("NFC Target is detached");
                    }
                };

                adapter.setPeerListener(onSuccessCB);
 
  - name: unsetReceiveNDEFListener
    summary: Unregisters the listener for receiving NDEF messages from the NFC peer-to-peer target connected.
    description: |
        To use this method, it is required to include the following privilege in the tiapp.xml file of your Titanium application: http://tizen.org/privilege/nfc.p2p
    examples:
      - example: |
            var tizen = require("tizen");
            var adapter = tizen.NFC.getDefaultAdapter();
            
            var onSuccessCB = {
            
                onattach : function(nfcPeer) {

                    console.log("NFC Target is detected");
                    nfcPeer.setReceiveNDEFListener(
                        function(response){
                            console.log("Receive message");
                            nfcPeer.unsetReceiveNDEFListener();
                        });
                    },
                    ondetach : function() {
                        console.log("NFC Target is detached");
                    }
                };
            }

            adapter.setPeerListener(onSuccessCB);
 
  - name: sendNDEF
    summary: Registers a callback function to be invoked when an NDEF message is received from the connected NFC peer-to-peer target.
    description: |
        To use this method, it is required to include the following privilege in the tiapp.xml file of your Titanium application:  http://tizen.org/privilege/nfc.p2p
    parameters:
      - name: ndefMessage  
        summary: NDEF message to send to NFC peer-to-peer target.
        type: Tizen.NFC.NDEFMessage

      - name: callback  
        summary: Invoked in case of successfully sending data to NFC peer-to-peer target or in case of any error during sending.
        type: Callback<ErrorResponse>

# Pseudo-type
---
name: NDEFMessageReadResponse
platforms: [tizen]
summary: |
    Simple object returned in the callback from
    [setReceiveNDEFListener](Tizen.NFC.NFCPeer.setReceiveNDEFListener) method.
extends: ErrorResponse
properties:
  - name: success
    summary: Indicates if the operation succeeded.
    description: Returns `true` if request succeeded, `false` otherwise.
    type: Boolean
    
  - name: error
    summary: Error message, if any returned.
    description: Will be undefined if `success` is `true`.
    type: String
    
  - name: code
    summary: Error code. Returns 0 if `success` is `true`.
    description: |
        Error code will be 0 if `success` is `true`, nonzero otherwise. If the error
        was generated by the operating system, that system's error value is used.
        Otherwise, this value will be -1.
    type: Number

  - name: ndefMessage
    summary: NDEF message that is read from the NFC tag or target.
    description: Will be undefined if `success` is `false`.
    type: Tizen.NFC.NDEFMessage
