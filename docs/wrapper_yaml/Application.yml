---
name: Tizen.Application
summary: This API provides a way to launch other applications and access application management.
    
extends: Titanium.Module
platforms: [tizen]
methods:
  - name: getCurrentApplication
    summary: Gets the Application object defining the current application.
    returns: 
      - type: Tizen.Application.Application
        summary: Application The data structure that defines current application.
    examples:
      - example: |
            var applicationObj = require('Ti/Tizen/Application');
            var app = applicationObj.getCurrentApplication();
            console.log("Current application's app id is " + app.appInfo.id);

  - name: launch
    summary: Launches an application with the given application ID. 
    description: |
        The ErrorCallback() is launched with these error types:
        NotFoundError - If the application is not found with given ID.
        InvalidValuesError - If any of the input parameters contain an invalid value.
        UnknownError - If any other error occurs.
    parameters:
 
      - name: id
        summary: A unique string representing application ID.
        type: String

      - name: successCallback
        summary: The method to call when the invocation ends successfully.
        type: Callback<Object>
        optional: true

      - name: errorCallback
        summary: The method executes when an error occurs. Accepts error object as parameter.
        type: Callback<Titanium.Tizen.WebAPIError>
        optional: true
    examples:
      - example: |
            function onsuccess() {
                console.log("The application has launched successfully");
            }
            var applicationObj = require('Ti/Tizen/Application');
            applicationObj.launch("org.tizen.calculator", onsuccess);

  - name: launchAppControl
    summary: Launches an application with the specified application control. 
    description: |
        An application can launch other applications with the application control, and get back the results from the launched applications.
        The application control consists of an operation, URI, and MIME type, and describes the request to be performed by the newly launched application. The application control is passed to the launchAppControl() method to launch an application. The system tries to find the proper application to perform the requested application control, then launches the selected application.
        The application control request is passed to the newly launched application and it can be accessed by getRequestedAppControl() method. The passed application control contains the reason the application was launched and information about what the application is doing. The launched application can send a result to the caller application with the replyResult() method of RequestedApplicationControl interface.
        The ErrorCallback() is launched with these error types:
            NotFoundError - If system cannot find the application that matches the specified application control.
            InvalidValuesError - If any of the input parameters contain an invalid value.
            UnknownError: If any other error occurs.

    parameters:

      - name: appControl
        summary: The data structure describing application control details.
        type: Tizen.Application.ApplicationControl
 
      - name: id
        summary: "An identifier of the application to be launched. If the ID is null or not specified, then the system tries to find the application to be launched for the requested application control."
        type: String

      - name: successCallback
        summary: The method to call when the invocation ends successfully.
        type: Callback<Object>
        optional: true

      - name: errorCallback
        summary: The method executes when an error occurs. Accepts error object as parameter.
        type: Callback<Titanium.Tizen.WebAPIError>
        optional: true    

      - name: replyCallback
        summary: |
            The method to invoke when the application gets back results from the launched application. 
            Pass a dictionary with the following supported keys: `onsuccess` a function that accepts as parameter array of Tizen.Application.ApplicationControlData, 
            and will be called when the callee application calls RequestedApplicationControl.replyResult(), 
            and `onfailure` a function that will be called when the callee application calls RequestedApplicationControl.replyFailure().
        type: ApplicationControlReplyCallback
        optional: true
    examples:
      - example: |
            var applicationObj = require('Ti/Tizen/Application');
            var appControl = applicationObj.createApplicationControl({operation: "http://tizen.org/appcontrol/operation/create_content",
                                                                uri: null,
                                                                mime: "image/jpeg",
                                                                category: null});
            var appControlReplyCallback = {
                // callee sent a reply
                onsuccess: function(data) {
                    for(var i=0; i < data.length; i++) {
                        console.log("#"+i+" key:"+data[i].key);
                        for(var j=0; j < data[i].value.length; j++) {
                            console.log("   value#"+j+":"+data[i].value[j]);
                        }
                    }
                },
                // Something went wrong
                onfailure: function() {
                    console.log('The launch application control failed');
                }
            }
            applicationObj.launchAppControl(appControl, null,
                                                  function() {console.log("launch application control succeed");},
                                                  function(e) {console.log("launch application control failed. reason: " + e.message);},
                                                  appControlReplyCallback );

  - name: findAppControl
    summary: Finds application information can be launched with the given application control.  
    description: |
        An application can get a list of other applications can be launched with the application control.
        The ErrorCallback() is launched with these error types:
            NotFoundError - If system cannot find the application that corresponds to the specified application control.
            InvalidValuesError - If any of the input parameters contain an invalid value.
            UnknownError - If any other error occurs.
    parameters: 

      - name: appControl
        summary: A data structure describing application control details.
        type: Tizen.Application.ApplicationControl

      - name: successCallback
        summary: The method to call that returns a list of application information. 
        type: Callback<Tizen.Application.ApplicationInformation[], Tizen.Application.ApplicationControl>

      - name: errorCallback
        summary: The method to call when an error occurs. Accepts error object as parameter.
        type: Callback<Titanium.Tizen.WebAPIError>
        optional: true
    examples:
      - example: |
            var applicationObj = require('Ti/Tizen/Application');
            var appControl = applicationObj.createApplicationControl({operation: "http://tizen.org/appcontrol/operation/create_content",
                                                                uri: null,
                                                                mime: "image/jpeg",
                                                                category: null});
            function successCB(appInfos, appControl) {
                // em>appControl/em> is same object with the value passed as first parameter to em>findAppControl()/em>
                var appControlReplyCallback = {
                    // callee sent a reply
                    onsuccess: function(data) {
                        for(var i=0; i < data.length; i++) {
                            console.log("#"+i+" key:"+data[i].key);
                            for(var j=0; j < data[i].value.length; j++) {
                                console.log("   value#"+j+":"+data[i].value[j]);
                            }
                        }
                    },
                    // Something went wrong
                    onfailure: function() {
                        console.log('The launch application control failed');
                    }
                }
                var appId = appInfos[0].id; // select first app's id
                applicationObj.launchAppControl(appControl, appId,
                                                      function() {console.log("launch application control succeed"); },
                                                      function(e) {console.log("launch application control failed. reason: " + e.message); },
                                                      appControlReplyCallback );
            }
            applicationObj.findAppControl(appControl, successCB); 
 
  - name: getAppsContext
    summary: Gets a list of application contexts for applications that are currently running on a device. The information contained for each application corresponds to the application state at the time when the list was generated. 
    description: |
        The errorCallback() is launched with this error type:
            UnknownError - If an unknownn error occurs.
    parameters:

      - name: successCallback
        summary: The method to call when the invocation ends successfully.  
        type: Callback<Tizen.Application.ApplicationContext[]>

      - name: errorCallback
        summary: The method to call when an error occurs. Accepts error object as parameter.
        type: Callback<Titanium.Tizen.WebAPIError>
        optional: true
    examples:
      - example: |
            function onRunningAppsContext(contexts) {
                for (var i = 0; i < contexts.length; i++)
                addToTaskManager(contexts[i]);
            }
            var applicationObj = require('Ti/Tizen/Application');
            applicationObj.getAppsContext(onRunningAppsContext);
 
  - name: getAppContext
    summary: |
        Gets the application context for the specified application context ID. 
        If the ID is set to null or is not set at all, the method returns the application context of the current application. 
        The list of running applications and their application IDs is obtained with getAppsContext().
    returns: 
      - type: Tizen.Application.ApplicationContext
        summary: A data structure that lists running application details.
    parameters: 

      - name: contextId
        summary: "A string representing an application context ID. If the ID is not provided, the application context of the calling application will be returned."
        type: String

  - name: getAppsInfo
    summary: Gets the list of installed application's information on a device. The information contained on each application corresponds to the application state at the moment when the list was generated. 
    description: |
        The errorCallback() is launched with this error type:
        UnknownError - If an unknown error occurs.

    parameters:

      - name: successCallback
        summary: The method to call when the invocation ends successfully.
        type: Callback<Tizen.Application.ApplicationInformation[]>

      - name: errorCallback
        summary: The method to call when an error occurs. Accepts error object as parameter.
        type: Callback<Tizen.WebAPIError>
        optional: true
    examples:
      - example: |       
            function onListInstalledApps(applications) {
                for (var i = 0; i < applications.length; i++)
                    addToApplicationGrid(applications[i]);
                }
            var applicationObj = require('Ti/Tizen/Application');
            applicationObj.getAppsInfo(onListInstalledApps);
 
  - name: getAppInfo
    summary: Gets application information for a specified application ID.  
    description: |
        If the ID is set to null or not set at all, it returns application information for the current application. 
        The list of installed applications and their application IDs is obtained with getAppsInfo(). 
    returns:
      - type: Tizen.Application.ApplicationInformation
        summary: The application metadata
    parameters: 

      - name: id
        summary: "A string representing application ID. If the ID is not provided, the application information of the calling application will be returned."  
        type: String
        optional: true
    examples:
      - example: |
            var applicationObj = require('Ti/Tizen/Application');
            var appContext = applicationObj.getAppContext(null);
            console.log("Application context retrieved for app " + appContext.id);
 
  - name: addAppInfoEventListener
    summary: Adds a listener for receiving any notification for changes in the list of the installed applications on a device. 
    description: |
        It install a callback that is triggered every time a change occurs on the list of installed applications on a device. This change may be occured by a new installation, uninstallation, or update of an application.
        When executed, the implementation must immediately return a listener ID that identifies the listener. After returning the ID, the change detection operation is started asynchronously.
        The ApplicationInformationEventCallback must be invoked every time a new application is installed, removed, or updated.
        The change detection must continue until the removeAppInfoEventListener() method is called with the corresponding listener identifier.

    returns:
      - type: Number
        summary: ID of the listener that can be used to remove the listener later. 
    parameters: 

      - name: eventCallback
        summary: |
            Pass a dictionary with the following supported keys: `oninstalled` a function that accepts parameter of type Tizen.Application.ApplicationInformation,  
            called when the application is installed, `onupdated` a function that accepts parameter of type Tizen.Application.ApplicationInformation, and will be 
            called when when an application is installed, and `onuninstalled` , a function that accepts a applictionId and will be called when the application will be uninstalled.
        type: Object
    examples:
      - example: |
            var appEventCallback = {
                oninstalled: function(application) {
                    console.log('The application ' + application.name + ' is installed');
                },
                onupdated: function(application) {
                    console.log('The application ' + application.name + ' is updated');
                },
                onuninstalled: function(appid) {
                    console.log('The application ' + appid + ' is uninstalled');
                }
            };
            var applicationObj = require('Ti/Tizen/Application');
            var watchId = applicationObj.addAppInfoEventListener(appEventCallback);
  - name: removeAppInfoEventListener
    summary: Removes the listener to stop receiving notifications for changes on the list of installed applications on a device.  
    parameters: 

      - name: watchId
        summary: An ID that identifies the listener.
        type: Number
    examples:
      - example: |
            var applicationObj = require('Ti/Tizen/Application');
            applicationObj.removeAppInfoEventListener(watchId);
 
  - name: createApplicationControlData
    summary: Creates and returns an instance of <Tizen.Application.ApplicationControlData>.
    returns: 
        type: Tizen.Application
    parameters: 

      - name: Options
        summary: Dictionary with initial arguments for ApplicationControlDataUnit.
        type: Dictionary<ApplicationControlDataUnit>

    examples:
      - example: |
            var applicationObj = require('Ti/Tizen/Application');
            var appControlData = applicationObj.createApplicationControlData({key: "image", value: [imagedata1]});

  - name: createApplicationControl
    summary: Creates and returns an instance of <Tizen.Application.ApplicationControl>.
    returns: 
        type: Tizen.ApplicationControl
    parameters: 

      - name: Options
        summary: Dictionary with initial arguments for ApplicationControlUnit.
        type: Dictionary<ApplicationControlUnit>

    examples:
      - example: |
            var applicationObj = require('Ti/Tizen/Application');
            var appControl = applicationObj.createApplicationControl({operation: "http://tizen.org/appcontrol/operation/share",
                                                                uri: "share.html",
                                                                mime: "image/*",
                                                                category: null,
                                                                data: [applicationObj.createApplicationControlData(key: "images", value: [imagedata1, imagedata2])]});
# Pseudo-type
---
name: ApplicationControlDataUnit
summary: Contains information required to initialize a <Tizen.Application.ApplicationControlData>.
platforms: [tizen]
properties:
  - name: key
    type: String
    summary: An attribute to store the name of a key.
  - name: value
    type: String[]
    summary: An attribute to store the value associated with a key.
    
---
name: ApplicationControlUnit
summary: Contains information required to initialize an <Tizen.Application.ApplicationControl>.
platforms: [tizen]
properties:
  - name: operation
    type: String
    summary: An attribute to store the string that defines the action to be performed by an application control.
  - name: uri 
    type: String
    summary: (optional) An attribute to store the URI needed by application control.
    optional: true
  - name: mime  
    type: String
    summary: (optional) An attribute to store the MIME type of a content.
    optional: true
  - name: category   
    type: String
    summary: (optional) An attribute to store the category of the application to be launched.
    optional: true
  - name: data  
    type: Tizen.Application.ApplicationControlData
    summary: (optional) An array of attributes to store the data needed for an application control.
    optional: true
---
name: ApplicationControlReplyCallback
summary: This call back interface specifies success callbacks that are invoked as a reply from the requseted application control within the application control requestor. 
description: |
    This callback interface specifies two methods:
        onsuccess() - Invoked by the callee application calls RequestedApplicationControl.replyResult().
        onfailure() - Invoked if the callee application calls RequestedApplicationControl.replyFailure().
methods:
  - name: onsuccess
    summary: Called when the callee application calls RequestedApplicationControl.replyResult().  
    parameters:
      - name: data 
        summary: An array of ApplicationControlData objects 
        type: Tizen.Application.ApplicationControlData[]
        optional: true

  - name: onfailure 
    summary: Called when the callee application calls RequestedApplicationControl.replyFailure(). 
---
name: ApplicationInformationEventCallback
summary: The callback interface to specify for subscribing for notification of changes in the list of installed applications on a device. 
description: This callback interface specifies methods that will be invoked when an application is installed, updated, or uninstalled.  
methods: 
  - name: oninstalled
    summary: Called when an application is installed. 
    parameters:
      - name: info 
        summary: The application information of the installed application. 
        type: Tizen.Application.ApplicationInformation[]

  - name: onupdated 
    summary: Called when an application is updated. 
    parameters:
      - name: info 
        summary: The application information of the updated application. 
        type: Tizen.Message.MessageConversation[]

  - name: onuninstalled
    summary: Called when an application is uninstalled. 
    parameters:
      - name: id
        summary: The ID of the uninstalled application.  
        type: String
