module Notification {

   
    typedef DOMString NotificationId;
    

    enum NotificationType { "STATUS" };


    enum StatusNotificationType { "SIMPLE", "ONGOING", "PROGRESS" };


    [NoInterfaceObject] interface NotificationObject {
        readonly attribute NotificationManager notification;
    };
    Tizen implements NotificationObject;

    
    [NoInterfaceObject] interface NotificationManager {


        void post(Notification notification);


        void update(Notification notification);


        void remove(NotificationId id);

     
        void removeAll();

    
        Notification get(NotificationId id);

    
        Notification[] getAll();
    };

    
    [NoInterfaceObject] interface Notification {
    
    
        readonly attribute NotificationId id;


        readonly attribute NotificationType type;


        readonly attribute Date postedTime;


        attribute DOMString title;


        attribute DOMString? content;

    };

       
    dictionary StatusNotificationInit {

        DOMString content;

        DOMString iconPath; 

        DOMString soundPath;

        boolean vibration;

        ApplicationControl appControl;

        ApplicationId appId;

        unsigned short progressValue;
    };
    
   [Constructor(StatusNotificationType statusType, DOMString title, optional StatusNotificationInit? notificationInitDict)]


    interface StatusNotification : Notification {


        readonly attribute StatusNotificationType statusType;
    

        attribute DOMString? iconPath;

    
        attribute DOMString? soundPath;
  
    
        attribute boolean? vibration;

    
        attribute ApplicationControl? appControl;


    
       attribute ApplicationId? appId;

    

        attribute unsigned short? progressValue;

    };
};