---
name: Modules.Tizen
summary: The mine module of Tizen Web Device API
description: "This is the Tizen root interface."
extends: Titanium.Module
platforms: [tizen]
methods:

  - name: createAttributeFilter
    summary: Creates and returns an instance of <Modules.Tizen.AttributeFilter>.
    returns: 
        type: Modules.Tizen.AttributeFilter
    parameters: 
      - name: Options
        summary: Dictionary with initial arguments for AttributeFilter.
        type: Dictionary<AttributeFilterUnit>

  - name: createAttributeRangeFilter
    summary: Creates and returns an instance of <Modules.Tizen.AttributeRangeFilter>.
    returns: 
        type: Modules.Tizen.AttributeRangeFilter
    parameters: 

      - name: Options
        summary: Dictionary with initial arguments for AttributeRangeFilter.
        type: Dictionary<AttributeRangeFilterUnit>

  - name: createCompositeFilter
    summary: Creates and returns an instance of <Modules.Tizen.CompositeFilter>.
    returns: 
        type: Modules.Tizen.CompositeFilter
    parameters: 

      - name: Options
        summary: Dictionary with initial arguments for CompositeFilter.
        type: Dictionary<CompositeFilterUnit>

  - name: createSortMode
    summary: Creates and returns an instance of <Modules.Tizen.SortMode>.
    returns: 
        type: Modules.Tizen.SortMode
    parameters: 

      - name: Options
        summary: Dictionary with initial arguments for SortMode.
        type: Dictionary<SortModeUnit>
 
  - name: createSimpleCoordinates
    summary: Creates and returns an instance of <Modules.Tizen.SimpleCoordinates>.
    returns: 
        type: Modules.Tizen.SimpleCoordinates
    parameters: 

      - name: Options
        summary: Dictionary with initial arguments for SimpleCoordinates.
        type: Dictionary<SimpleCoordinatesUnit>

  - name: createContactRef
    summary: Creates and returns an instance of <Modules.Tizen.ContactRef>.
    returns: 
        type: Modules.Tizen.ContactRef
    parameters: 

      - name: Options
        summary: Dictionary with initial arguments for ContactRef.
        type: Dictionary<ContactRefUnit>

properties:
  - name: FILTER_MATCH_FLAG_EXACTLY
    summary: Indicates the attribute value should match exactly the given value (default). For strings, the match is case-sensitive.
    type: String
    permission: read-only

  - name: FILTER_MATCH_FLAG_FULLSTRING
    summary: String-based matching. Matches the whole string (case insensitive).
    type: String
    permission: read-only

  - name: FILTER_MATCH_FLAG_CONTAINS
    summary: Indicates the attribute value should contain the given string (strings only - case insensitive).
    type: String
    permission: read-only

  - name: FILTER_MATCH_FLAG_STARTSWITH
    summary: Indicates the attribute value should start with the given string (strings only - case insensitive).
    type: String
    permission: read-only

  - name: FILTER_MATCH_FLAG_ENDSWITH
    summary: Indicates the attribute value should end with the given string (strings only - case insensitive).
    type: String
    permission: read-only

  - name: FILTER_MATCH_FLAG_EXISTS
    summary: Indicates the filter should match if the attribute exists.
    type: String
    permission: read-only

  - name: SORT_ORDER_MODE_ASC
    summary: Indicates the sorting order is ascending
    type: String
    permission: read-only

  - name: SORT_ORDER_MODE_DESC
    summary: Indicates the sorting order is descending
    type: String
    permission: read-only

  - name: COMPOSITE_FILTER_TYPE_UNION
    summary: A union of filters ("OR" operator)
    type: String
    permission: read-only

  - name: COMPOSITE_FILTER_TYPE_INTERSECTION
    summary: An intersection of filters ("AND" operator)
    type: String
    permission: read-only
    
examples:
  - title: Attribute filter
    example: |
        Use an attribute filter to remove a message from the message store.

            // folderId and emailService must be initialized to valid values
        
            var Tizen = require('tizen'),
                attributeFilter = Tizen.createAttributeFilter({
                    attributeName: 'folderId',
                    matchFlag: Tizen.FILTER_MATCH_FLAG_EXACTLY,
                    matchValue: folderId
                });

            function messagesFoundCB(response) {
                if (response.success) {
                    console.log('Message removed successfully.');
                }
                else {
                    console.log('Failed to remove message.');
                }
            }

            // Remove selected message
            emailService.messageStorage.findMessages(attributeFilter, messagesFoundCB);

# Pseudo-type
---
name: AbstractFilter
summary: Common interface used by different types of object filters.

---
name: AttributeFilterUnit
summary: Represents a filter based on an object attribute.
properties:
  - name: attributeName
    type: String
    summary: The name of the object attribute used for filtering.
             This is the name of the object attribute exactly as it is defined in the object's interface. For attributes of complex type, use fully-qualified names (such as 'organizations.role' to filter on a contact's role in an organization).
             For attributes of an array type, the filter will match if any value in the array matches.
  - name: matchFlag
    type: String
    summary: |
        (optional) Used for attribute-based filtering: FILTER_MATCH_FLAG_EXACTLY, FILTER_MATCH_FLAG_FULLSTRING, FILTER_MATCH_FLAG_CONTAINS, FILTER_MATCH_FLAG_STARTSWITH, FILTER_MATCH_FLAG_ENDSWITH, FILTER_MATCH_FLAG_EXISTS.
    optional: ture
  - name: matchValue
    type: any
    summary: (optional) The value used for matching. The filter will match if the attribute value matches the given matchValue. This value is not used if the matchFlag is set to <Modules.Tizen.FILTER_MATCH_FLAG_EXISTS>. By default, this attribute is set to null.
    optional: true

---
name: AttributeRangeFilterUnit
summary: Represents a filter based on an object attribute which has values that are within a particular range.
properties:
  - name: attributeName
    type: String
    summary: The name of the object attribute used for filtering.
             This is the name of the object attribute exactly as it is defined in the object's interface. For attributes of complex type, use fully-qualified names (such as 'organizations.role' to filter on a contact's role in an organization).
             For attributes of an array type, the filter will match if any value in the array matches.
  - name: initialValue
    type: any
    summary: (optional) Objects with an attribute that is greater than or equal to initialValue will match. By default, this attribute is set to null.
    optional: true
  - name: endValue
    type: any
    summary: (optional) Objects with an attribute that is strictly lower than to endValue will match. By default, this attribute is set to null.
    optional: true
 
---
name: CompositeFilterUnit
summary: Represents a set of filters.
properties:
  - name: type
    type: String
    summary: | 
        The composite filter type: COMPOSITE_FILTER_TYPE_UNION, COMPOSITE_FILTER_TYPE_INTERSECTION.
  - name: filters
    type: Array<AbstractFilter>
    summary: (optional) The list of filters in the composite filter.
    optional: true
    
---
name: SortModeUnit
summary: Common interface used for sorting of queried data.
properties:
  - name: attributeName
    type: String
    summary: The name of the object attribute used for sorting.
  - name: order
    type: String
    summary: |
        (optional) The type of the sorting: SORT_ORDER_MODE_ASC, SORT_ORDER_MODE_DESC.
    optional: true

---
name: SimpleCoordinatesUnit
summary:  Represents a point (latitude and longitude) in map coordinate system.
properties:
  - name: latitude
    type: Number
    summary: Latitude, of the WGS84 datum.
  - name: longitude
    type: Number
    summary: Longitude, of the WGS84 datum.

---
name: ContactRefUnit
summary:  The fully-defined contact reference.
properties:
  - name: addressBookId
    type: String
    summary: The address book identifier.
  - name: contactId
    type: String
    summary: The contact identifier inside the address book. 
